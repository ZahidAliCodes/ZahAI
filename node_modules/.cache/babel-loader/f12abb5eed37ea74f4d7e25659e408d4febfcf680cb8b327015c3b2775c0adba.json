{"ast":null,"code":"var _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./main.css\";\nimport { useState } from \"react\";\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Main = () => {\n  _s();\n  const [text, setText] = useState(\"\");\n  const handleChange = event => {\n    setText(event.target.value);\n  };\n  const handleButtonClick = () => {\n    console.log(\"Sending text:\", text);\n    setText(\"\");\n  };\n  const autoResize = () => {\n    const textarea = document.getElementById(\"autoResizeTextarea\");\n    textarea.style.height = \"auto\"; // Reset height to auto\n    textarea.style.height = Math.min(textarea.scrollHeight, 250) + \"px\"; // Set height to scroll height, capped at 400px\n  };\n  const [isChecked, setIsChecked] = useState(false);\n  const handleToggle = () => {\n    setIsChecked(!isChecked);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n_s(Main, \"sqIOJlbgQEs931gQqnZ57oU7kx8=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Main","_s","text","setText","handleChange","event","target","value","handleButtonClick","console","log","autoResize","textarea","document","getElementById","style","height","Math","min","scrollHeight","isChecked","setIsChecked","handleToggle","_c","$RefreshReg$"],"sources":["C:/Users/Zahid/Desktop/my-first-project/src/components/main/Main.jsx"],"sourcesContent":["import React from \"react\";\r\nimport \"./main.css\";\r\nimport { useState } from \"react\";\r\nconst Main = () => {\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleChange = (event) => {\r\n        setText(event.target.value);\r\n    };\r\n\r\n    const handleButtonClick = () => {\r\n        console.log(\"Sending text:\", text);\r\n        setText(\"\");\r\n    };\r\n    const autoResize = () => {\r\n        const textarea = document.getElementById(\"autoResizeTextarea\");\r\n        textarea.style.height = \"auto\"; // Reset height to auto\r\n        textarea.style.height = Math.min(textarea.scrollHeight, 250) + \"px\"; // Set height to scroll height, capped at 400px\r\n      };\r\n    const [isChecked, setIsChecked] = useState(false);\r\n\r\n    const handleToggle = () => {\r\n        setIsChecked(!isChecked);\r\n    };\r\n\r\n    return (\r\n        <>\r\n               \r\n        </>   \r\n    );\r\n};\r\n\r\nexport default Main;\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AACnB,SAASC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AACjC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpC,MAAMS,YAAY,GAAIC,KAAK,IAAK;IAC5BF,OAAO,CAACE,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5BC,OAAO,CAACC,GAAG,CAAC,eAAe,EAAER,IAAI,CAAC;IAClCC,OAAO,CAAC,EAAE,CAAC;EACf,CAAC;EACD,MAAMQ,UAAU,GAAGA,CAAA,KAAM;IACrB,MAAMC,QAAQ,GAAGC,QAAQ,CAACC,cAAc,CAAC,oBAAoB,CAAC;IAC9DF,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAG,MAAM,CAAC,CAAC;IAChCJ,QAAQ,CAACG,KAAK,CAACC,MAAM,GAAGC,IAAI,CAACC,GAAG,CAACN,QAAQ,CAACO,YAAY,EAAE,GAAG,CAAC,GAAG,IAAI,CAAC,CAAC;EACvE,CAAC;EACH,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAM2B,YAAY,GAAGA,CAAA,KAAM;IACvBD,YAAY,CAAC,CAACD,SAAS,CAAC;EAC5B,CAAC;EAED,oBACIrB,OAAA,CAAAF,SAAA,mBAEE,CAAC;AAEX,CAAC;AAACI,EAAA,CA3BID,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}